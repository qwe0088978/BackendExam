// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MyOfficeAPI.Migrations
{
    [DbContext(typeof(MyOfficeDbContext))]
    [Migration("20250211071635_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyOfficeACPD", b =>
                {
                    b.Property<string>("ACPD_SID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ACPD_Cname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACPD_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACPD_Ename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACPD_LoginID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACPD_LoginPWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACPD_Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ACPD_NowDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ACPD_NowID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACPD_Sname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ACPD_Status")
                        .HasColumnType("tinyint");

                    b.Property<bool>("ACPD_Stop")
                        .HasColumnType("bit");

                    b.Property<string>("ACPD_StopMemo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ACPD_UPDDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ACPD_UPDID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ACPD_SID");

                    b.ToTable("MyOffice_ACPD");
                });

            modelBuilder.Entity("MyOfficeExecutionLog", b =>
                {
                    b.Property<long>("DeLog_AutoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DeLog_AutoID"));

                    b.Property<DateTime>("DeLog_ExDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeLog_ExecutionInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeLog_ExecutionProgram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DeLog_GroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeLog_StoredPrograms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeLog_isCustomDebug")
                        .HasColumnType("bit");

                    b.Property<bool>("DeLog_verifyNeeded")
                        .HasColumnType("bit");

                    b.HasKey("DeLog_AutoID");

                    b.ToTable("MyOffice_ExcuteionLog");
                });
#pragma warning restore 612, 618
        }
    }
}
